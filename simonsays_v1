const int MAX_LEVEL = 100;
int sequence[MAX_LEVEL];
int your_sequence[MAX_LEVEL];
int level = 1;

int velocity = 1000;

void setup() {
Serial.begin(9600);
pinMode(22, INPUT); //RED BUTTON
pinMode(23, INPUT; //GREEN BUTTON
pinMode(24, INPUT; //BLUE BUTTON
pinMode(25, INPUT; //YELLOW BUTTON

pinMode(30, OUTPUT); //RED LED
pinMode(31, OUTPUT); //GREEN LED
pinMode(33, OUTPUT); //BLUE LED
pinMode(32, OUTPUT); //YELLOW LED
}

void loop() {
  if (level == 1)
    generate_sequence();
  //if (digitalRead(22) == LOW || level != 1) //If start button is pressed or you're winning
  //{
    show_sequence();
    get_sequence();
  //}
}

void show_sequence() {
  Serial.println("Showing Sequence");
  digitalWrite(30, LOW);
  digitalWrite(31, LOW);
  digitalWrite(33, LOW);
  digitalWrite(32, LOW);

  for (int i = 0; i < level; i++) {
    digitalWrite(sequence[i], HIGH);
    delay(velocity);
    digitalWrite(sequence[i], LOW);
    delay(200);
  }
}

void get_sequence() {
Serial.println("Waiting for input");//wait for your sequence
int flag = 0; //this flag indicates if the sequence is correct

for (int i = 0; i < level; i++) {
  flag = 0;
  while(flag == 0) {
    if (digitalRead(22) == LOW) {
      digitalWrite(30, HIGH);
      Serial.println("RED ON");
      your_sequence[i] = 30;
      flag = 1;
      delay(500);
    if (your_sequence[i] != sequence[i]) {
      wrong_sequence();
      return;
    }
      digitalWrite(30, LOW);
    }

    if (digitalRead(23) == LOW) {
      digitalWrite(31, HIGH);
      Serial.println("GREEN ON");
      your_sequence[i] = 31;
      flag = 1;
      delay(500);
    if (your_sequence[i] != sequence[i]) {
      wrong_sequence();
      return;
    }
    digitalWrite(31, LOW);
    }

    if (digitalRead(24) == LOW) {
      digitalWrite(33, HIGH);
      Serial.println("BLUE ON");
      your_sequence[i] = 33;
      flag = 1;
      delay(500);
    if (your_sequence[i] != sequence[i]) {
      wrong_sequence();
      return;
    }
    digitalWrite(33, LOW);
    }

    if (digitalRead(25) == LOW) {
    digitalWrite(32, HIGH);
    Serial.println("YELLOW ON");
    your_sequence[i] = 32;
    flag = 1;
    delay(500);
    
    if (your_sequence[i] != sequence[i]) {
      wrong_sequence();
      return;
    }
    digitalWrite(32, LOW);
    }
  }
}
  right_sequence();
}

void generate_sequence() {
  Serial.println("Generating Sequence");//generate a sequence;
  randomSeed(millis()); //in this way is really random!!!
  for (int i = 0; i < MAX_LEVEL; i++) {
    sequence[i] = random(2,6);
  }
}

void wrong_sequence() {
  Serial.println("Wrong Sequence!");
  for (int i = 0; i < 3; i++) {
    digitalWrite(30, HIGH);
    digitalWrite(31, HIGH);
    digitalWrite(33, HIGH);
    digitalWrite(32, HIGH);
    delay(250);
    digitalWrite(30, LOW);
    digitalWrite(31, LOW);
    digitalWrite(33, LOW);
    digitalWrite(32, LOW);
    delay(250);
  }
  level = 1;
  velocity = 1000;
}

void right_sequence() {
  Serial.println("Correct Sequence!");
  digitalWrite(30, LOW);
  digitalWrite(31, LOW);
  digitalWrite(33, LOW);
  digitalWrite(32, LOW);
  delay(250);
  digitalWrite(30, HIGH);
  digitalWrite(31, HIGH);
  digitalWrite(33, HIGH);
  digitalWrite(32, HIGH);
  delay(500);
  digitalWrite(30, LOW);
  digitalWrite(31, LOW);
  digitalWrite(33, LOW);
  digitalWrite(32, LOW);
  delay(500);

  if (level < MAX_LEVEL);
  level++;
  velocity -= 50; //increase difficulty
}
